import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { LuisAuthoringContext } from "../luisAuthoringContext";
/** Class representing a Features. */
export declare class Features {
    private readonly client;
    /**
     * Create a Features.
     * @param {LuisAuthoringContext} client Reference to the service client.
     */
    constructor(client: LuisAuthoringContext);
    /**
     * [DEPRECATED NOTICE: This operation will soon be removed] Creates a new pattern feature in a
     * version of the application.
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param patternCreateObject The Name and Pattern of the feature.
     * @param [options] The optional parameters
     * @deprecated This operation is deprecated. Please do not use it any longer.
     * @returns Promise<Models.FeaturesCreatePatternFeatureResponse>
     */
    createPatternFeature(appId: string, versionId: string, patternCreateObject: Models.PatternCreateObject, options?: msRest.RequestOptionsBase): Promise<Models.FeaturesCreatePatternFeatureResponse>;
    /**
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param patternCreateObject The Name and Pattern of the feature.
     * @param callback The callback
     * @deprecated This operation is deprecated. Please do not use it any longer.
     */
    createPatternFeature(appId: string, versionId: string, patternCreateObject: Models.PatternCreateObject, callback: msRest.ServiceCallback<number>): void;
    /**
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param patternCreateObject The Name and Pattern of the feature.
     * @param options The optional parameters
     * @param callback The callback
     * @deprecated This operation is deprecated. Please do not use it any longer.
     */
    createPatternFeature(appId: string, versionId: string, patternCreateObject: Models.PatternCreateObject, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<number>): void;
    /**
     * [DEPRECATED NOTICE: This operation will soon be removed] Gets all the pattern features.
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param [options] The optional parameters
     * @deprecated This operation is deprecated. Please do not use it any longer.
     * @returns Promise<Models.FeaturesListApplicationVersionPatternFeaturesResponse>
     */
    listApplicationVersionPatternFeatures(appId: string, versionId: string, options?: Models.FeaturesListApplicationVersionPatternFeaturesOptionalParams): Promise<Models.FeaturesListApplicationVersionPatternFeaturesResponse>;
    /**
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param callback The callback
     * @deprecated This operation is deprecated. Please do not use it any longer.
     */
    listApplicationVersionPatternFeatures(appId: string, versionId: string, callback: msRest.ServiceCallback<Models.PatternFeatureInfo[]>): void;
    /**
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param options The optional parameters
     * @param callback The callback
     * @deprecated This operation is deprecated. Please do not use it any longer.
     */
    listApplicationVersionPatternFeatures(appId: string, versionId: string, options: Models.FeaturesListApplicationVersionPatternFeaturesOptionalParams, callback: msRest.ServiceCallback<Models.PatternFeatureInfo[]>): void;
    /**
     * Creates a new phraselist feature in a version of the application.
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param phraselistCreateObject A Phraselist object containing Name, comma-separated Phrases and
     * the isExchangeable boolean. Default value for isExchangeable is true.
     * @param [options] The optional parameters
     * @returns Promise<Models.FeaturesAddPhraseListResponse>
     */
    addPhraseList(appId: string, versionId: string, phraselistCreateObject: Models.PhraselistCreateObject, options?: msRest.RequestOptionsBase): Promise<Models.FeaturesAddPhraseListResponse>;
    /**
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param phraselistCreateObject A Phraselist object containing Name, comma-separated Phrases and
     * the isExchangeable boolean. Default value for isExchangeable is true.
     * @param callback The callback
     */
    addPhraseList(appId: string, versionId: string, phraselistCreateObject: Models.PhraselistCreateObject, callback: msRest.ServiceCallback<number>): void;
    /**
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param phraselistCreateObject A Phraselist object containing Name, comma-separated Phrases and
     * the isExchangeable boolean. Default value for isExchangeable is true.
     * @param options The optional parameters
     * @param callback The callback
     */
    addPhraseList(appId: string, versionId: string, phraselistCreateObject: Models.PhraselistCreateObject, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<number>): void;
    /**
     * Gets all the phraselist features in a version of the application.
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param [options] The optional parameters
     * @returns Promise<Models.FeaturesListPhraseListsResponse>
     */
    listPhraseLists(appId: string, versionId: string, options?: Models.FeaturesListPhraseListsOptionalParams): Promise<Models.FeaturesListPhraseListsResponse>;
    /**
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param callback The callback
     */
    listPhraseLists(appId: string, versionId: string, callback: msRest.ServiceCallback<Models.PhraseListFeatureInfo[]>): void;
    /**
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param options The optional parameters
     * @param callback The callback
     */
    listPhraseLists(appId: string, versionId: string, options: Models.FeaturesListPhraseListsOptionalParams, callback: msRest.ServiceCallback<Models.PhraseListFeatureInfo[]>): void;
    /**
     * Gets all the extraction phraselist and pattern features in a version of the application.
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param [options] The optional parameters
     * @returns Promise<Models.FeaturesListResponse>
     */
    list(appId: string, versionId: string, options?: Models.FeaturesListOptionalParams): Promise<Models.FeaturesListResponse>;
    /**
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param callback The callback
     */
    list(appId: string, versionId: string, callback: msRest.ServiceCallback<Models.FeaturesResponseObject>): void;
    /**
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param options The optional parameters
     * @param callback The callback
     */
    list(appId: string, versionId: string, options: Models.FeaturesListOptionalParams, callback: msRest.ServiceCallback<Models.FeaturesResponseObject>): void;
    /**
     * [DEPRECATED NOTICE: This operation will soon be removed] Gets the specified pattern feature's
     * info in a version of the application.
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param patternId The pattern feature ID.
     * @param [options] The optional parameters
     * @deprecated This operation is deprecated. Please do not use it any longer.
     * @returns Promise<Models.FeaturesGetPatternFeatureInfoResponse>
     */
    getPatternFeatureInfo(appId: string, versionId: string, patternId: number, options?: msRest.RequestOptionsBase): Promise<Models.FeaturesGetPatternFeatureInfoResponse>;
    /**
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param patternId The pattern feature ID.
     * @param callback The callback
     * @deprecated This operation is deprecated. Please do not use it any longer.
     */
    getPatternFeatureInfo(appId: string, versionId: string, patternId: number, callback: msRest.ServiceCallback<Models.PatternFeatureInfo>): void;
    /**
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param patternId The pattern feature ID.
     * @param options The optional parameters
     * @param callback The callback
     * @deprecated This operation is deprecated. Please do not use it any longer.
     */
    getPatternFeatureInfo(appId: string, versionId: string, patternId: number, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PatternFeatureInfo>): void;
    /**
     * [DEPRECATED NOTICE: This operation will soon be removed] Updates the pattern, the name and the
     * state of the pattern feature in a version of the application.
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param patternId The pattern feature ID.
     * @param patternUpdateObject The new values for: - Just a boolean called IsActive, in which case
     * the status of the feature will be changed. - Name, Pattern and a boolean called IsActive to
     * update the feature.
     * @param [options] The optional parameters
     * @deprecated This operation is deprecated. Please do not use it any longer.
     * @returns Promise<Models.FeaturesUpdatePatternFeatureResponse>
     */
    updatePatternFeature(appId: string, versionId: string, patternId: number, patternUpdateObject: Models.PatternUpdateObject, options?: msRest.RequestOptionsBase): Promise<Models.FeaturesUpdatePatternFeatureResponse>;
    /**
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param patternId The pattern feature ID.
     * @param patternUpdateObject The new values for: - Just a boolean called IsActive, in which case
     * the status of the feature will be changed. - Name, Pattern and a boolean called IsActive to
     * update the feature.
     * @param callback The callback
     * @deprecated This operation is deprecated. Please do not use it any longer.
     */
    updatePatternFeature(appId: string, versionId: string, patternId: number, patternUpdateObject: Models.PatternUpdateObject, callback: msRest.ServiceCallback<Models.OperationStatus>): void;
    /**
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param patternId The pattern feature ID.
     * @param patternUpdateObject The new values for: - Just a boolean called IsActive, in which case
     * the status of the feature will be changed. - Name, Pattern and a boolean called IsActive to
     * update the feature.
     * @param options The optional parameters
     * @param callback The callback
     * @deprecated This operation is deprecated. Please do not use it any longer.
     */
    updatePatternFeature(appId: string, versionId: string, patternId: number, patternUpdateObject: Models.PatternUpdateObject, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.OperationStatus>): void;
    /**
     * [DEPRECATED NOTICE: This operation will soon be removed] Deletes a pattern feature in a version
     * of the application.
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param patternId The pattern feature ID.
     * @param [options] The optional parameters
     * @deprecated This operation is deprecated. Please do not use it any longer.
     * @returns Promise<Models.FeaturesDeletePatternFeatureResponse>
     */
    deletePatternFeature(appId: string, versionId: string, patternId: number, options?: msRest.RequestOptionsBase): Promise<Models.FeaturesDeletePatternFeatureResponse>;
    /**
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param patternId The pattern feature ID.
     * @param callback The callback
     * @deprecated This operation is deprecated. Please do not use it any longer.
     */
    deletePatternFeature(appId: string, versionId: string, patternId: number, callback: msRest.ServiceCallback<Models.OperationStatus>): void;
    /**
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param patternId The pattern feature ID.
     * @param options The optional parameters
     * @param callback The callback
     * @deprecated This operation is deprecated. Please do not use it any longer.
     */
    deletePatternFeature(appId: string, versionId: string, patternId: number, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.OperationStatus>): void;
    /**
     * Gets phraselist feature info in a version of the application.
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param phraselistId The ID of the feature to be retrieved.
     * @param [options] The optional parameters
     * @returns Promise<Models.FeaturesGetPhraseListResponse>
     */
    getPhraseList(appId: string, versionId: string, phraselistId: number, options?: msRest.RequestOptionsBase): Promise<Models.FeaturesGetPhraseListResponse>;
    /**
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param phraselistId The ID of the feature to be retrieved.
     * @param callback The callback
     */
    getPhraseList(appId: string, versionId: string, phraselistId: number, callback: msRest.ServiceCallback<Models.PhraseListFeatureInfo>): void;
    /**
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param phraselistId The ID of the feature to be retrieved.
     * @param options The optional parameters
     * @param callback The callback
     */
    getPhraseList(appId: string, versionId: string, phraselistId: number, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PhraseListFeatureInfo>): void;
    /**
     * Updates the phrases, the state and the name of the phraselist feature in a version of the
     * application.
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param phraselistId The ID of the feature to be updated.
     * @param [options] The optional parameters
     * @returns Promise<Models.FeaturesUpdatePhraseListResponse>
     */
    updatePhraseList(appId: string, versionId: string, phraselistId: number, options?: Models.FeaturesUpdatePhraseListOptionalParams): Promise<Models.FeaturesUpdatePhraseListResponse>;
    /**
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param phraselistId The ID of the feature to be updated.
     * @param callback The callback
     */
    updatePhraseList(appId: string, versionId: string, phraselistId: number, callback: msRest.ServiceCallback<Models.OperationStatus>): void;
    /**
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param phraselistId The ID of the feature to be updated.
     * @param options The optional parameters
     * @param callback The callback
     */
    updatePhraseList(appId: string, versionId: string, phraselistId: number, options: Models.FeaturesUpdatePhraseListOptionalParams, callback: msRest.ServiceCallback<Models.OperationStatus>): void;
    /**
     * Deletes a phraselist feature from a version of the application.
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param phraselistId The ID of the feature to be deleted.
     * @param [options] The optional parameters
     * @returns Promise<Models.FeaturesDeletePhraseListResponse>
     */
    deletePhraseList(appId: string, versionId: string, phraselistId: number, options?: msRest.RequestOptionsBase): Promise<Models.FeaturesDeletePhraseListResponse>;
    /**
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param phraselistId The ID of the feature to be deleted.
     * @param callback The callback
     */
    deletePhraseList(appId: string, versionId: string, phraselistId: number, callback: msRest.ServiceCallback<Models.OperationStatus>): void;
    /**
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param phraselistId The ID of the feature to be deleted.
     * @param options The optional parameters
     * @param callback The callback
     */
    deletePhraseList(appId: string, versionId: string, phraselistId: number, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.OperationStatus>): void;
}
