import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { LuisAuthoringContext } from "../luisAuthoringContext";
/** Class representing a Examples. */
export declare class Examples {
    private readonly client;
    /**
     * Create a Examples.
     * @param {LuisAuthoringContext} client Reference to the service client.
     */
    constructor(client: LuisAuthoringContext);
    /**
     * Adds a labeled example utterance in a version of the application.
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param exampleLabelObject A labeled example utterance with the expected intent and entities.
     * @param [options] The optional parameters
     * @returns Promise<Models.ExamplesAddResponse>
     */
    add(appId: string, versionId: string, exampleLabelObject: Models.ExampleLabelObject, options?: msRest.RequestOptionsBase): Promise<Models.ExamplesAddResponse>;
    /**
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param exampleLabelObject A labeled example utterance with the expected intent and entities.
     * @param callback The callback
     */
    add(appId: string, versionId: string, exampleLabelObject: Models.ExampleLabelObject, callback: msRest.ServiceCallback<Models.LabelExampleResponse>): void;
    /**
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param exampleLabelObject A labeled example utterance with the expected intent and entities.
     * @param options The optional parameters
     * @param callback The callback
     */
    add(appId: string, versionId: string, exampleLabelObject: Models.ExampleLabelObject, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.LabelExampleResponse>): void;
    /**
     * Adds a batch of labeled example utterances to a version of the application.
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param exampleLabelObjectArray Array of example utterances.
     * @param [options] The optional parameters
     * @returns Promise<Models.ExamplesBatchResponse>
     */
    batch(appId: string, versionId: string, exampleLabelObjectArray: Models.ExampleLabelObject[], options?: msRest.RequestOptionsBase): Promise<Models.ExamplesBatchResponse>;
    /**
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param exampleLabelObjectArray Array of example utterances.
     * @param callback The callback
     */
    batch(appId: string, versionId: string, exampleLabelObjectArray: Models.ExampleLabelObject[], callback: msRest.ServiceCallback<Models.BatchLabelExample[]>): void;
    /**
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param exampleLabelObjectArray Array of example utterances.
     * @param options The optional parameters
     * @param callback The callback
     */
    batch(appId: string, versionId: string, exampleLabelObjectArray: Models.ExampleLabelObject[], options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BatchLabelExample[]>): void;
    /**
     * Returns example utterances to be reviewed from a version of the application.
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param [options] The optional parameters
     * @returns Promise<Models.ExamplesListResponse>
     */
    list(appId: string, versionId: string, options?: Models.ExamplesListOptionalParams): Promise<Models.ExamplesListResponse>;
    /**
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param callback The callback
     */
    list(appId: string, versionId: string, callback: msRest.ServiceCallback<Models.LabeledUtterance[]>): void;
    /**
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param options The optional parameters
     * @param callback The callback
     */
    list(appId: string, versionId: string, options: Models.ExamplesListOptionalParams, callback: msRest.ServiceCallback<Models.LabeledUtterance[]>): void;
    /**
     * Deletes the labeled example utterances with the specified ID from a version of the application.
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param exampleId The example ID.
     * @param [options] The optional parameters
     * @returns Promise<Models.ExamplesDeleteMethodResponse>
     */
    deleteMethod(appId: string, versionId: string, exampleId: number, options?: msRest.RequestOptionsBase): Promise<Models.ExamplesDeleteMethodResponse>;
    /**
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param exampleId The example ID.
     * @param callback The callback
     */
    deleteMethod(appId: string, versionId: string, exampleId: number, callback: msRest.ServiceCallback<Models.OperationStatus>): void;
    /**
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param exampleId The example ID.
     * @param options The optional parameters
     * @param callback The callback
     */
    deleteMethod(appId: string, versionId: string, exampleId: number, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.OperationStatus>): void;
}
