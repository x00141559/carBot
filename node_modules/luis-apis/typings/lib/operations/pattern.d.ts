import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { LuisAuthoringContext } from "../luisAuthoringContext";
/** Class representing a Pattern. */
export declare class Pattern {
    private readonly client;
    /**
     * Create a Pattern.
     * @param {LuisAuthoringContext} client Reference to the service client.
     */
    constructor(client: LuisAuthoringContext);
    /**
     * @summary Adds a pattern to a version of the application.
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param pattern The input pattern.
     * @param [options] The optional parameters
     * @returns Promise<Models.PatternAddPatternResponse>
     */
    addPattern(appId: string, versionId: string, pattern: Models.PatternRuleCreateObject, options?: msRest.RequestOptionsBase): Promise<Models.PatternAddPatternResponse>;
    /**
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param pattern The input pattern.
     * @param callback The callback
     */
    addPattern(appId: string, versionId: string, pattern: Models.PatternRuleCreateObject, callback: msRest.ServiceCallback<Models.PatternRuleInfo>): void;
    /**
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param pattern The input pattern.
     * @param options The optional parameters
     * @param callback The callback
     */
    addPattern(appId: string, versionId: string, pattern: Models.PatternRuleCreateObject, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PatternRuleInfo>): void;
    /**
     * @summary Gets patterns in a version of the application.
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param [options] The optional parameters
     * @returns Promise<Models.PatternListPatternsResponse>
     */
    listPatterns(appId: string, versionId: string, options?: Models.PatternListPatternsOptionalParams): Promise<Models.PatternListPatternsResponse>;
    /**
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param callback The callback
     */
    listPatterns(appId: string, versionId: string, callback: msRest.ServiceCallback<Models.PatternRuleInfo[]>): void;
    /**
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param options The optional parameters
     * @param callback The callback
     */
    listPatterns(appId: string, versionId: string, options: Models.PatternListPatternsOptionalParams, callback: msRest.ServiceCallback<Models.PatternRuleInfo[]>): void;
    /**
     * @summary Updates patterns in a version of the application.
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param patterns An array represents the patterns.
     * @param [options] The optional parameters
     * @returns Promise<Models.PatternUpdatePatternsResponse>
     */
    updatePatterns(appId: string, versionId: string, patterns: Models.PatternRuleUpdateObject[], options?: msRest.RequestOptionsBase): Promise<Models.PatternUpdatePatternsResponse>;
    /**
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param patterns An array represents the patterns.
     * @param callback The callback
     */
    updatePatterns(appId: string, versionId: string, patterns: Models.PatternRuleUpdateObject[], callback: msRest.ServiceCallback<Models.PatternRuleInfo[]>): void;
    /**
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param patterns An array represents the patterns.
     * @param options The optional parameters
     * @param callback The callback
     */
    updatePatterns(appId: string, versionId: string, patterns: Models.PatternRuleUpdateObject[], options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PatternRuleInfo[]>): void;
    /**
     * @summary Adds a batch of patterns in a version of the application.
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param patterns A JSON array containing patterns.
     * @param [options] The optional parameters
     * @returns Promise<Models.PatternBatchAddPatternsResponse>
     */
    batchAddPatterns(appId: string, versionId: string, patterns: Models.PatternRuleCreateObject[], options?: msRest.RequestOptionsBase): Promise<Models.PatternBatchAddPatternsResponse>;
    /**
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param patterns A JSON array containing patterns.
     * @param callback The callback
     */
    batchAddPatterns(appId: string, versionId: string, patterns: Models.PatternRuleCreateObject[], callback: msRest.ServiceCallback<Models.PatternRuleInfo[]>): void;
    /**
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param patterns A JSON array containing patterns.
     * @param options The optional parameters
     * @param callback The callback
     */
    batchAddPatterns(appId: string, versionId: string, patterns: Models.PatternRuleCreateObject[], options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PatternRuleInfo[]>): void;
    /**
     * @summary Deletes a list of patterns in a version of the application.
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param patternIds The patterns IDs.
     * @param [options] The optional parameters
     * @returns Promise<Models.PatternDeletePatternsResponse>
     */
    deletePatterns(appId: string, versionId: string, patternIds: string[], options?: msRest.RequestOptionsBase): Promise<Models.PatternDeletePatternsResponse>;
    /**
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param patternIds The patterns IDs.
     * @param callback The callback
     */
    deletePatterns(appId: string, versionId: string, patternIds: string[], callback: msRest.ServiceCallback<Models.OperationStatus>): void;
    /**
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param patternIds The patterns IDs.
     * @param options The optional parameters
     * @param callback The callback
     */
    deletePatterns(appId: string, versionId: string, patternIds: string[], options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.OperationStatus>): void;
    /**
     * @summary Updates a pattern in a version of the application.
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param patternId The pattern ID.
     * @param pattern An object representing a pattern.
     * @param [options] The optional parameters
     * @returns Promise<Models.PatternUpdatePatternResponse>
     */
    updatePattern(appId: string, versionId: string, patternId: string, pattern: Models.PatternRuleUpdateObject, options?: msRest.RequestOptionsBase): Promise<Models.PatternUpdatePatternResponse>;
    /**
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param patternId The pattern ID.
     * @param pattern An object representing a pattern.
     * @param callback The callback
     */
    updatePattern(appId: string, versionId: string, patternId: string, pattern: Models.PatternRuleUpdateObject, callback: msRest.ServiceCallback<Models.PatternRuleInfo>): void;
    /**
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param patternId The pattern ID.
     * @param pattern An object representing a pattern.
     * @param options The optional parameters
     * @param callback The callback
     */
    updatePattern(appId: string, versionId: string, patternId: string, pattern: Models.PatternRuleUpdateObject, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PatternRuleInfo>): void;
    /**
     * @summary Deletes the pattern with the specified ID from a version of the application..
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param patternId The pattern ID.
     * @param [options] The optional parameters
     * @returns Promise<Models.PatternDeletePatternResponse>
     */
    deletePattern(appId: string, versionId: string, patternId: string, options?: msRest.RequestOptionsBase): Promise<Models.PatternDeletePatternResponse>;
    /**
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param patternId The pattern ID.
     * @param callback The callback
     */
    deletePattern(appId: string, versionId: string, patternId: string, callback: msRest.ServiceCallback<Models.OperationStatus>): void;
    /**
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param patternId The pattern ID.
     * @param options The optional parameters
     * @param callback The callback
     */
    deletePattern(appId: string, versionId: string, patternId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.OperationStatus>): void;
    /**
     * @summary Returns patterns for the specific intent in a version of the application.
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param intentId The intent classifier ID.
     * @param [options] The optional parameters
     * @returns Promise<Models.PatternListIntentPatternsResponse>
     */
    listIntentPatterns(appId: string, versionId: string, intentId: string, options?: Models.PatternListIntentPatternsOptionalParams): Promise<Models.PatternListIntentPatternsResponse>;
    /**
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param intentId The intent classifier ID.
     * @param callback The callback
     */
    listIntentPatterns(appId: string, versionId: string, intentId: string, callback: msRest.ServiceCallback<Models.PatternRuleInfo[]>): void;
    /**
     * @param appId The application ID.
     * @param versionId The version ID.
     * @param intentId The intent classifier ID.
     * @param options The optional parameters
     * @param callback The callback
     */
    listIntentPatterns(appId: string, versionId: string, intentId: string, options: Models.PatternListIntentPatternsOptionalParams, callback: msRest.ServiceCallback<Models.PatternRuleInfo[]>): void;
}
